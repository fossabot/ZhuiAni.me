// <auto-generated />
using System.Collections.Generic;
using Me.Xfox.ZhuiAnime;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Me.Xfox.ZhuiAnime.Migrations
{
    [DbContext(typeof(ZAContext))]
    [Migration("20230317161003_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_category");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<IDictionary<string, string>>("Annotations")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("annotations");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<long?>("ParentItemId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_item_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_item");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_item_category_id");

                    b.HasIndex("ParentItemId")
                        .HasDatabaseName("ix_item_parent_item_id");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Link", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<IDictionary<string, string>>("Annotations")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("annotations");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint")
                        .HasColumnName("item_id");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mime_type");

                    b.Property<long?>("ParentLinkId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_link_id");

                    b.HasKey("Id")
                        .HasName("pk_link");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_link_item_id");

                    b.HasIndex("ParentLinkId")
                        .HasDatabaseName("ix_link_parent_link_id");

                    b.ToTable("link", (string)null);
                });

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Item", b =>
                {
                    b.HasOne("Me.Xfox.ZhuiAnime.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_item_category_category_id");

                    b.HasOne("Me.Xfox.ZhuiAnime.Models.Item", "ParentItem")
                        .WithMany("ChildItems")
                        .HasForeignKey("ParentItemId")
                        .HasConstraintName("fk_item_item_parent_item_id");

                    b.Navigation("Category");

                    b.Navigation("ParentItem");
                });

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Link", b =>
                {
                    b.HasOne("Me.Xfox.ZhuiAnime.Models.Item", "Item")
                        .WithMany("Links")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_link_item_item_id");

                    b.HasOne("Me.Xfox.ZhuiAnime.Models.Link", "ParentLink")
                        .WithMany("ChildLinks")
                        .HasForeignKey("ParentLinkId")
                        .HasConstraintName("fk_link_link_parent_link_id");

                    b.Navigation("Item");

                    b.Navigation("ParentLink");
                });

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Item", b =>
                {
                    b.Navigation("ChildItems");

                    b.Navigation("Links");
                });

            modelBuilder.Entity("Me.Xfox.ZhuiAnime.Models.Link", b =>
                {
                    b.Navigation("ChildLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
