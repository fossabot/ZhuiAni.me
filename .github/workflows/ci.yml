name: CI

on:
  push:
    branches: ["main"]
    tags: ["v*"]
    paths: ["Me.Xfox.ZhuiAnime/**", "Me.Xfox.ZhuiAnime.WebUI/**"]

jobs:
  container:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Docker setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata action
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/zhuianime
          tags: |
            latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=branch
            type=semver,pattern={{raw}}
            type=sha,enable=true,priority=100,prefix=commit-,suffix=,format=short

      - name: Publish images
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  dotnet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "7.0.x"

      - name: restore dependencies
        run: dotnet restore

      - name: build
        run: dotnet build -c Release --no-restore
      - name: test
        run: dotnet test -c Release --no-build --verbosity normal

      - name: publish
        run: dotnet publish -c Release
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: Me.Xfox.ZhuiAnime
          path: Me.Xfox.ZhuiAnime/bin/Release/net7.0/publish/

  webui:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Me.Xfox.ZhuiAnime.WebUI
    steps:
      - uses: actions/checkout@v3

      - name: install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: build
        run: pnpm build
      - name: lint
        run: pnpm lint
